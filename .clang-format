# https://clang.llvm.org/docs/ClangFormatStyleOptions.html

# 语言: None, Cpp, Java, JavaScript, ObjC, Proto, TableGen, TextProto
Language:	Cpp
BasedOnStyle:	LLVM

# 访问说明符(public、private等)的偏移
AccessModifierOffset:	-2
# 开括号(开圆括号、开尖括号、开方括号)后的对齐: Align, DontAlign, AlwaysBreak(总是在开括号后换行)
AlignAfterOpenBracket:	Align
# 连续赋值时，对齐所有等号
AlignConsecutiveAssignments: true
# 连续声明时，对齐所有声明的变量名
AlignConsecutiveDeclarations: true
# 连续声明时，对齐所有的宏
AlignConsecutiveMacros: true
# 连续声明时，对齐所有位域
AlignConsecutiveBitFields: true
# 右对齐逃脱换行(使用反斜杠换行)的反斜杠
AlignEscapedNewlines: Left
# 水平对齐二元和三元表达式的操作数
AlignOperands: true
# 对齐连续的尾随的注释
AlignTrailingComments: true
# 不允许函数声明的所有参数在放在下一行
AllowAllParametersOfDeclarationOnNextLine: false
# 不允许短的块放在同一行
AllowShortBlocksOnASingleLine: Always
AllowAllArgumentsOnNextLine: false
AllowAllConstructorInitializersOnNextLine: false
# 允许短的case标签放在同一行
AllowShortCaseLabelsOnASingleLine:	true
# 允许短的函数放在同一行: None, InlineOnly(定义在类中), Empty(空函数), Inline(定义在类中，空函数), All
AllowShortFunctionsOnASingleLine:	Empty
# 允许短的if语句保持在同一行
AllowShortIfStatementsOnASingleLine:	Never
# 允许短的循环保持在同一行
AllowShortLoopsOnASingleLine:	true
# 允许短的lamdas表达式在同一行；
AllowShortLambdasOnASingleLine: None
# 总是在返回类型后换行: None, All, TopLevel(顶级函数，不包括在类中的函数), 
# AllDefinitions(所有的定义，不包括声明), TopLevelDefinitions(所有的顶级函数的定义)
AlwaysBreakAfterReturnType:	None
# 总是在多行string字面量前换行
AlwaysBreakBeforeMultilineStrings:	false
# 总是在template声明后换行
AlwaysBreakTemplateDeclarations:	false
# false表示函数实参要么都在同一行，要么都各自一行
BinPackArguments:	false
# false表示所有形参要么都在同一行，要么都各自一行
BinPackParameters:	false

AlwaysBreakAfterDefinitionReturnType:	None
# 大括号换行，只有当BreakBeforeBraces设置为Custom时才有效
BraceWrapping:
  # class定义后面
  AfterClass:	false
  # 控制语句后面
  AfterControlStatement:	Never
  # case标签后
  AfterCaseLabel: false
  # enum定义后面
  AfterEnum:	false
  # 函数定义后面
  AfterFunction:	true
  # 命名空间定义后面
  AfterNamespace:	false
  AfterObjCDeclaration:	false
  # struct定义后面
  AfterStruct:	false
  # union定义后面
  AfterUnion:	false
  # extern之后
  AfterExternBlock: false
  # catch之前
  BeforeCatch:	true
  # else之前
  BeforeElse:	false
  # 缩进大括号
  IndentBraces:	false
  # 分离空函数
  SplitEmptyFunction: true
  # 分离空语句
  SplitEmptyRecord: true
  # 分离空命名空间
  SplitEmptyNamespace: true

# 在二元运算符前换行: None(在操作符后换行), NonAssignment(在非赋值的操作符前换行), All(在操作符前换行)
BreakBeforeBinaryOperators:	All
# 在大括号前换行: Attach(始终将大括号附加到周围的上下文), Linux(除函数、命名空间和类定义，与Attach类似), 
#   Mozilla(除枚举、函数、记录定义，与Attach类似), Stroustrup(除函数定义、catch、else，与Attach类似), 
#   Allman(总是在大括号前换行), GNU(总是在大括号前换行，并对于控制语句的大括号增加额外的缩进), WebKit(在函数前换行), Custom
#   注：这里认为语句块也属于函数
BreakBeforeBraces:	Custom
# 在三元运算符前换行
BreakBeforeTernaryOperators:	true
# 在构造函数的初始化列表的冒号后换行
BreakConstructorInitializers: BeforeColon


BreakInheritanceList: AfterColon
BreakStringLiterals: false
# 每行字符的限制，0表示没有限制
ColumnLimit:	120

CompactNamespaces: false
# 构造函数的初始化列表要么都在同一行，要么都各自一行
ConstructorInitializerAllOnOneLineOrOnePerLine:	true
# 构造函数的初始化列表的缩进宽度
ConstructorInitializerIndentWidth:	4
# 延续的行的缩进宽度
ContinuationIndentWidth:	4
# 去除C++11的列表初始化的大括号{后和}前的空格
Cpp11BracedListStyle:	true
# 继承最常用的指针和引用的对齐方式
DerivePointerAlignment:	false

CommentPragmas:	'^ IWYU pragma:'
# DeriveLineEnding:
DisableFormat:	false
ExperimentalAutoDetectBinPacking:	false
ForEachMacros:	[ foreach, Q_FOREACH, BOOST_FOREACH ]
# 缩进case标签
IndentCaseLabels:	false
#缩进goto标签
IndentGotoLabels: false
IndentPPDirectives:  None
IndentWidth:	4
IndentWrappedFunctionNames:	true
IndentPPDirectives: BeforeHash

KeepEmptyLinesAtTheStartOfBlocks:	false

MacroBlockBegin:	''
MacroBlockEnd:	''

MaxEmptyLinesToKeep:	1

NamespaceIndentation:	All
# NamespaceMacros:

ObjCBlockIndentWidth:	3
ObjCSpaceAfterProperty:	false
ObjCSpaceBeforeProtocolList:	true

# 在call(后对函数调用换行的penalty
PenaltyBreakBeforeFirstCallParameter:	19
# 在一个注释中引入换行的penalty
PenaltyBreakComment:	300
# 第一次在<<前换行的penalty
PenaltyBreakFirstLessLess:	120
# 在一个字符串字面量中引入换行的penalty
PenaltyBreakString:	1000
# 对于每个在行字符数限制之外的字符的penalty
PenaltyExcessCharacter:	1000000
# 将函数的返回类型放到它自己的行的penalty
PenaltyReturnTypeOnItsOwnLine:	60

# 指针和引用的对齐: Left, Right, Middle
PointerAlignment:	Left
# 允许重新排版注释
ReflowComments:	false
# 允许排序#include
SortIncludes:	false


SpaceAfterCStyleCast:	false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators:	true
SpaceBeforeCpp11BracedList: true
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens:	ControlStatements
SpaceBeforeRangeBasedForLoopColon: false
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses:	false
SpacesBeforeTrailingComments:	2
SpacesInAngles:	false
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals:	false
SpacesInParentheses:	false
SpacesInSquareBrackets:	false

Standard:	Cpp11

TabWidth:	3
UseTab:	Never
